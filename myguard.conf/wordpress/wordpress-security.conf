autoindex off;

if ($request_method !~ ^(GET|POST|HEAD|PUT)$ ) {
    return 444;
}

#Disable execution of scripts other than PHP
location ~* .(pl|cgi|py|sh|lua|asp)$ {
    return 444;
}

#Direct PHP File Access
#If somehow, a hacker successfully sneaks in a PHP file onto your site,
#they’ll be able to run this file by loading file which effectively becomes a backdoor to infiltrate your site.
#We should disable direct access to any PHP files by adding the following rules:
location ~* /(?:uploads|files|wp-content|wp-includes|akismet)/([^/])+\.(txt|md|php$ {
    return 444;
}

# WordPress: deny general stuff
location ~* ^/(?:xmlrpc\.php|wp-links-opml\.php|wp-config\.php|wp-config-sample\.php|wp-comments-post\.php|readme\.html|license\.txt)$ {
    return 444;
}

location ~* ^/wp-content/uploads/wpo-plugins-tables-list.json$ {
    return 444;
}

# WordPress: deny wp-content/uploads nasty stuff
location ~* ^/wp-content/uploads/.*\.(?:s?html?|php|js|swf)$ {
    return 444;
}

location ~ ^/wp-content/uploads/(sucuri|updraft) {
    return 444;
}

#Disable access to your configuration files and other files that you don’t want to users are able to see
location ~* /(wp-config.(php|txt)|readme.html|license.txt|nginx.conf|wlwmanifest.xml) {
    return 444;
}

location ~ ^/wp-admin/(?:install|includes) {
    return 444;
}

location ~ ^/wp-admin/(load\-styles|load\-scripts)\.php.*load\[\]\=([^&,]*,) {
    return 444;
}
location ~ ^(/wp-json/wp/v[0-9]+/users) {
    return 444;
}

#This module will allow us to pattern match certain key files and inject random text in the files that
# is non-destructive / non-invasive and will most importantly alter the md5sum calculated on such files. All transparent to WPScan.
location ~* ^/(license.txt|wp-includes/(.*)/.+\.(js|css)|wp-admin/(.*)/.+\.(js|css))$ {
    sub_filter_types text/css text/javascript text/plain;
    sub_filter_once on;
    sub_filter ';
    ' ';
    /* $msec */ ';
}

# Stop scann
location ~* ^/wp-content/(plugins|themes)/.+\.(txt|log|md)$ {
    return 444;
}
